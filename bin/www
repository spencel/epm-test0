/*jshint esversion: 6*/
// Third party modules
import http from 'http';
// Project defined modules
import app from '../app';
// Get port from environment and store in Express
const port = normalizePort(process.env.PORT || '8840');
app.set('port', port);
// Create HTTP server
const server = http.createServer(app);
// Listen on port
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);
// Normalize port to a number, string, or false
function normalizePort(val) {
	var port = parseInt(val, 10);
	if (isNaN(port)) {
		// named pipe
		return val;
	} else if (port >= 0) {
		// port number
		return port;
	}
	return false;
}
// Handler for HTTP server on error event
function onError(error) {
	if (error.syscall !== 'listen') {
		throw error;
	}
	var bind = typeof port === 'string' // if port is of type string
		? 'Pipe ' + port // bind = Pipe [port]
		: 'Port ' + port; // bind = Port [port]
	// handle specific listen errors with friendly messages
	switch (error.code) {
		case 'EACCES':
			console.error(bind + ' requires elevated privileges');
			process.exit(1);
			break;
		case 'EADDRINUSE':
			console.error(bind + ' is already in use');
			process.exit(1);
			break;
		default:
			throw error;
	}
}
// Handler for HTTP server listening event
function onListening() {
	var addr = server.address();
	var bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port;
	//debug('Listening on ' + bind);
}